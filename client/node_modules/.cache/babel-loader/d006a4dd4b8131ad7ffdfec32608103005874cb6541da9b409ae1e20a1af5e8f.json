{"ast":null,"code":"var _jsxFileName = \"/Users/thomasphan/Desktop/listen-with-me-app/client/src/components/Room.js\",\n  _s = $RefreshSig$();\nimport RoomHeader from './RoomHeader';\nimport Dropdown from 'react-bootstrap/Dropdown';\nimport { useEffect, useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Room = ({\n  key,\n  name\n}) => {\n  _s();\n  const [users, setUsers] = useState([]);\n  useEffect(() => {\n    // get this object from API call in object\n    console.log(sessionKey);\n    const getFriends = async () => {\n      try {\n        const res = await fetch('http://localhost:3001/friends/', {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json'\n          },\n          body: JSON.stringify({\n            sessionKey: sessionKey\n          })\n        });\n        const users = await res.json();\n        setUsers(users);\n        console.log(users);\n      } catch (error) {\n        console.log(error);\n      }\n    };\n    getFriends();\n  }, [sessionKey]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(RoomHeader, {\n      name: name\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Dropdown, {\n      children: [/*#__PURE__*/_jsxDEV(Dropdown.Toggle, {\n        variant: \"success\",\n        id: \"dropdown-basic\",\n        children: \"friends\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Dropdown.Menu, {\n        children: users.map((user, index) => {\n          return /*#__PURE__*/_jsxDEV(Dropdown.Item, {\n            children: user\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 44,\n            columnNumber: 32\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n};\n_s(Room, \"JadZszbqna06PpJs9hMo7Hl/LOY=\");\n_c = Room;\nexport default Room;\nvar _c;\n$RefreshReg$(_c, \"Room\");","map":{"version":3,"names":["RoomHeader","Dropdown","useEffect","useState","jsxDEV","_jsxDEV","Fragment","_Fragment","Room","key","name","_s","users","setUsers","console","log","sessionKey","getFriends","res","fetch","method","headers","body","JSON","stringify","json","error","children","fileName","_jsxFileName","lineNumber","columnNumber","Toggle","variant","id","Menu","map","user","index","Item","_c","$RefreshReg$"],"sources":["/Users/thomasphan/Desktop/listen-with-me-app/client/src/components/Room.js"],"sourcesContent":["import RoomHeader from './RoomHeader'\nimport Dropdown from 'react-bootstrap/Dropdown';\nimport { useEffect, useState } from 'react';\n\nconst Room = ({ key, name }) => {\n    const [users, setUsers] = useState([])\n\n    useEffect(() => { // get this object from API call in object\n        console.log(sessionKey)\n\n        const getFriends = async () => {\n            try {\n                const res = await fetch('http://localhost:3001/friends/' , {\n                    method: 'POST',\n                    headers: {\n                        'Content-Type': 'application/json'\n                    },\n                    body: JSON.stringify({\n                        sessionKey: sessionKey\n                    })\n                })\n    \n                const users = await res.json()\n                setUsers(users)\n                console.log(users)\n            } catch (error) {\n                console.log(error)\n            }\n        }\n\n        getFriends()\n    }, [sessionKey])\n\n    return (\n        <>\n            <RoomHeader name={name}/>\n            <Dropdown>\n                <Dropdown.Toggle variant=\"success\" id=\"dropdown-basic\">\n                friends\n                </Dropdown.Toggle>\n        \n                <Dropdown.Menu>\n                    {users.map((user, index) => {\n                        return <Dropdown.Item key={index}>{user}</Dropdown.Item>;\n                    })}\n                </Dropdown.Menu>\n            </Dropdown> \n        </>\n       \n    )\n}\n\nexport default Room"],"mappings":";;AAAA,OAAOA,UAAU,MAAM,cAAc;AACrC,OAAOC,QAAQ,MAAM,0BAA0B;AAC/C,SAASC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAE5C,MAAMC,IAAI,GAAGA,CAAC;EAAEC,GAAG;EAAEC;AAAK,CAAC,KAAK;EAAAC,EAAA;EAC5B,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EAEtCD,SAAS,CAAC,MAAM;IAAE;IACdY,OAAO,CAACC,GAAG,CAACC,UAAU,CAAC;IAEvB,MAAMC,UAAU,GAAG,MAAAA,CAAA,KAAY;MAC3B,IAAI;QACA,MAAMC,GAAG,GAAG,MAAMC,KAAK,CAAC,gCAAgC,EAAG;UACvDC,MAAM,EAAE,MAAM;UACdC,OAAO,EAAE;YACL,cAAc,EAAE;UACpB,CAAC;UACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;YACjBR,UAAU,EAAEA;UAChB,CAAC;QACL,CAAC,CAAC;QAEF,MAAMJ,KAAK,GAAG,MAAMM,GAAG,CAACO,IAAI,CAAC,CAAC;QAC9BZ,QAAQ,CAACD,KAAK,CAAC;QACfE,OAAO,CAACC,GAAG,CAACH,KAAK,CAAC;MACtB,CAAC,CAAC,OAAOc,KAAK,EAAE;QACZZ,OAAO,CAACC,GAAG,CAACW,KAAK,CAAC;MACtB;IACJ,CAAC;IAEDT,UAAU,CAAC,CAAC;EAChB,CAAC,EAAE,CAACD,UAAU,CAAC,CAAC;EAEhB,oBACIX,OAAA,CAAAE,SAAA;IAAAoB,QAAA,gBACItB,OAAA,CAACL,UAAU;MAACU,IAAI,EAAEA;IAAK;MAAAkB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAC,CAAC,eACzB1B,OAAA,CAACJ,QAAQ;MAAA0B,QAAA,gBACLtB,OAAA,CAACJ,QAAQ,CAAC+B,MAAM;QAACC,OAAO,EAAC,SAAS;QAACC,EAAE,EAAC,gBAAgB;QAAAP,QAAA,EAAC;MAEvD;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAiB,CAAC,eAElB1B,OAAA,CAACJ,QAAQ,CAACkC,IAAI;QAAAR,QAAA,EACTf,KAAK,CAACwB,GAAG,CAAC,CAACC,IAAI,EAAEC,KAAK,KAAK;UACxB,oBAAOjC,OAAA,CAACJ,QAAQ,CAACsC,IAAI;YAAAZ,QAAA,EAAcU;UAAI,GAAZC,KAAK;YAAAV,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAuB,CAAC;QAC5D,CAAC;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACS,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACV,CAAC;EAAA,eACb,CAAC;AAGX,CAAC;AAAApB,EAAA,CA9CKH,IAAI;AAAAgC,EAAA,GAAJhC,IAAI;AAgDV,eAAeA,IAAI;AAAA,IAAAgC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}