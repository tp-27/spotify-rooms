{"ast":null,"code":"var _jsxFileName = \"/Users/thomasphan/Desktop/listen-with-me-app/client/src/components/Key.js\",\n  _s = $RefreshSig$();\nimport { useState, useRef } from 'react';\nimport Button from 'react-bootstrap/Button';\nimport Form from 'react-bootstrap/Form';\nimport '../index.css';\nimport CopyButton from './CopyButton';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Key = ({\n  user\n}) => {\n  _s();\n  const [key, setKey] = useState('');\n  const [copy, setCopy] = useState(false);\n  const keyRef = useRef();\n  const keyDivStyle = {\n    display: \"flex\",\n    justifyContent: \"space-between\",\n    width: \"100%\"\n  };\n  const getKey = async e => {\n    // get room name\n    e.preventDefault();\n    let roomName = e.target.value;\n    console.log(roomName);\n\n    // get a new key from server\n    const newSession = await fetch('http://localhost:3001/key/', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        sessionUser: [user],\n        sessionName: roomName\n      })\n    });\n    const newKey = await newSession.json();\n    console.log(newKey);\n    setKey(newKey.sessionKey); // set the new key\n  };\n  const copyToClipboard = () => {\n    const key = keyRef.current.innerText; // Get the text content of the paragraph\n    navigator.clipboard.writeText(key) // Use Clipboard API to copy text\n    .then(() => {\n      console.log('Text copied to clipboard');\n      console.log(key);\n    }).catch(err => {\n      console.error('Failed to copy text: ', err);\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: !key ? /*#__PURE__*/_jsxDEV(Form, {\n      style: {\n        width: \"100%\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n        children: \"Name:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n        type: \"text\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"primary\",\n        type: \"submit\",\n        onClick: getKey,\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 17\n    }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Key:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"new-key-container\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"new-key-container\",\n        style: keyDivStyle,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"key-container\",\n          children: /*#__PURE__*/_jsxDEV(\"p\", {\n            ref: keyRef,\n            children: key\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(CopyButton, {\n          onClick: () => copyToClipboard(),\n          showCopied: copy\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 25\n      }, this)]\n    }, void 0, true)\n  }, void 0, false);\n};\n_s(Key, \"eDN60wHFIvnORwIW1+bHt5bhAZU=\");\n_c = Key;\nexport default Key;\nvar _c;\n$RefreshReg$(_c, \"Key\");","map":{"version":3,"names":["useState","useRef","Button","Form","CopyButton","jsxDEV","_jsxDEV","Fragment","_Fragment","Key","user","_s","key","setKey","copy","setCopy","keyRef","keyDivStyle","display","justifyContent","width","getKey","e","preventDefault","roomName","target","value","console","log","newSession","fetch","method","headers","body","JSON","stringify","sessionUser","sessionName","newKey","json","sessionKey","copyToClipboard","current","innerText","navigator","clipboard","writeText","then","catch","err","error","children","style","Label","fileName","_jsxFileName","lineNumber","columnNumber","Control","type","variant","onClick","className","ref","showCopied","_c","$RefreshReg$"],"sources":["/Users/thomasphan/Desktop/listen-with-me-app/client/src/components/Key.js"],"sourcesContent":["import { useState, useRef } from 'react'\nimport Button from 'react-bootstrap/Button'\nimport Form from 'react-bootstrap/Form'\nimport '../index.css';\nimport CopyButton from './CopyButton';\n\nconst Key = ({ user }) => {\n    const [key, setKey] = useState('')\n    const [copy, setCopy] = useState(false)\n    const keyRef = useRef()\n\n    const keyDivStyle = {\n        display: \"flex\",\n        justifyContent: \"space-between\",\n        width: \"100%\",\n    }\n\n    const getKey = async (e) => {\n        // get room name\n        e.preventDefault()\n        let roomName = e.target.value\n        console.log(roomName)\n\n        // get a new key from server\n        const newSession = await fetch('http://localhost:3001/key/', {\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/json',\n            },\n            body: JSON.stringify({\n                sessionUser: [user],\n                sessionName: roomName \n            })\n        })\n\n        const newKey = await newSession.json()\n        console.log(newKey)\n        setKey(newKey.sessionKey) // set the new key\n        \n    }\n\n    const copyToClipboard = () => {\n        const key = keyRef.current.innerText // Get the text content of the paragraph\n        navigator.clipboard.writeText(key) // Use Clipboard API to copy text\n            .then(() => {\n                console.log('Text copied to clipboard')\n                console.log(key)\n            })\n            .catch(err => {\n                console.error('Failed to copy text: ', err)\n            })\n    }\n\n    return (\n        <>\n            {!key ? \n                <Form style={{ width: \"100%\" }}> \n                    <Form.Label>Name:</Form.Label>\n                    <Form.Control type=\"text\" />\n                    <Button variant=\"primary\" type=\"submit\" onClick={getKey}>\n                        Submit\n                    </Button>\n                </Form> :\n                <>\n                    <p>Key:</p>\n                    <div className=\"new-key-container\"></div>\n                        <div className=\"new-key-container\" style={keyDivStyle}>\n                        <div className=\"key-container\">\n                            <p ref={keyRef}>{key}</p>\n                        </div>\n                        <CopyButton onClick={() => copyToClipboard()} showCopied={copy} />\n                    </div>\n                </>\n            } \n        </>\n    )\n}\n\nexport default Key"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}