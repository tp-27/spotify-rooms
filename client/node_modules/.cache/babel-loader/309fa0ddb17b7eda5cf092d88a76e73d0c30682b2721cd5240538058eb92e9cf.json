{"ast":null,"code":"var _jsxFileName = \"/Users/thomasphan/Desktop/listen-with-me-app/client/src/components/Listen.js\",\n  _s = $RefreshSig$();\nimport Button from 'react-bootstrap/Button';\nimport Modal from 'react-bootstrap/Modal';\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport { useState, useEffect } from 'react';\nimport KeyForm from './KeyForm';\nimport Key from './Key';\nimport io from 'socket.io-client';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst socket = io.connect('http://localhost:3001'); // url from backend server\n\nconst Listen = () => {\n  _s();\n  const [listenOpt, setListen] = useState('');\n  const [message, setMessage] = useState('');\n  const [msgReceived, setMsgRcvd] = useState('');\n  const [keyContainer, setKeyContainer] = useState(false);\n  const [sessionKey, setKey] = useState('');\n  const [keyForm, showKeyForm] = useState(false);\n  const [show, setShow] = useState(false);\n  const onSubmit = async roomKey => {\n    // check if the key exists in db\n    const res = await fetch('http://localhost:3001/room/', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        sessionKey: roomKey\n      })\n    });\n    const message = await res.json();\n    console.log(message);\n\n    // connect client to the session\n  };\n  const joinRoom = () => {\n    if (keyContainer) {\n      // if key container exists\n      setKeyContainer(false); // remove key container\n    }\n    if (!keyForm) {\n      // if it's not already showing then show it\n      showKeyForm(true);\n    }\n\n    // if (key !== '') {\n    //     socket.emit('join_room', {message: \"Hello\"})\n    // }\n  };\n  const makeRoom = async () => {\n    if (keyForm) {\n      // if key form from join room exists\n      showKeyForm(false); // remove key form\n    }\n    if (!keyContainer) {\n      // if key not showing show it\n      setKeyContainer(true);\n\n      // get a new key from server\n      const newSession = await fetch('http://localhost:3001/key/', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          sessionUser: \"billy\"\n        })\n      });\n      const newKey = await newSession.json();\n      console.log(newKey);\n      setKey(newKey.sessionKey); // set the new key\n    }\n  };\n  const handleClick = event => {\n    setListen(event.target.getAttribute('data-value'));\n    handleOpen(); // show modal\n  };\n  const handleClose = () => setShow(false);\n  const handleOpen = () => setShow(true);\n  const sendMessage = () => {\n    socket.emit(\"send_message\", {\n      message: \"Hello\"\n    }); // emit to back end \n  };\n  useEffect(() => {\n    socket.on('receive_message', data => {\n      setMsgRcvd(data.message);\n    });\n  }, [socket]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"I want to listen\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"btn-container\",\n      children: [/*#__PURE__*/_jsxDEV(Button, {\n        size: \"lg\",\n        \"data-value\": \"alone\",\n        onClick: sendMessage,\n        children: \"alone\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        size: \"lg\",\n        \"data-value\": \"friend\",\n        onClick: handleClick,\n        children: \"with a friend\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Modal, {\n      show: show,\n      onHide: handleClose,\n      children: [/*#__PURE__*/_jsxDEV(Modal.Header, {\n        closeButton: true,\n        children: /*#__PURE__*/_jsxDEV(Modal.Title, {\n          children: \"Modal heading\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Modal.Body, {\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          className: \"key-btn\",\n          size: \"lg\",\n          onClick: joinRoom,\n          children: \"Join room\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          className: \"key-btn\",\n          size: \"lg\",\n          onClick: makeRoom,\n          id: \"make\",\n          children: \"Make room\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Modal.Footer, {\n        style: {\n          justifyContent: 'flex-start'\n        },\n        children: [keyForm && /*#__PURE__*/_jsxDEV(KeyForm, {\n          onSubmit: onSubmit\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 33\n        }, this), keyContainer && /*#__PURE__*/_jsxDEV(Key, {\n          newKey: sessionKey\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 38\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n};\n_s(Listen, \"nhCqwOzk2hrUU8x6nDQi4NFblO4=\");\n_c = Listen;\nexport default Listen;\nvar _c;\n$RefreshReg$(_c, \"Listen\");","map":{"version":3,"names":["Button","Modal","useState","useEffect","KeyForm","Key","io","jsxDEV","_jsxDEV","Fragment","_Fragment","socket","connect","Listen","_s","listenOpt","setListen","message","setMessage","msgReceived","setMsgRcvd","keyContainer","setKeyContainer","sessionKey","setKey","keyForm","showKeyForm","show","setShow","onSubmit","roomKey","res","fetch","method","headers","body","JSON","stringify","json","console","log","joinRoom","makeRoom","newSession","sessionUser","newKey","handleClick","event","target","getAttribute","handleOpen","handleClose","sendMessage","emit","on","data","children","fileName","_jsxFileName","lineNumber","columnNumber","className","size","onClick","onHide","Header","closeButton","Title","Body","id","Footer","style","justifyContent","_c","$RefreshReg$"],"sources":["/Users/thomasphan/Desktop/listen-with-me-app/client/src/components/Listen.js"],"sourcesContent":["import Button from 'react-bootstrap/Button';\nimport Modal from 'react-bootstrap/Modal';\nimport \"bootstrap/dist/css/bootstrap.min.css\"\nimport { useState, useEffect } from 'react'\nimport KeyForm from './KeyForm'\nimport Key from './Key'\nimport io from 'socket.io-client'\n\nconst socket = io.connect('http://localhost:3001') // url from backend server\n\nconst Listen = () => {\n    const [listenOpt, setListen] = useState('')\n    const [message, setMessage] = useState('')\n    const [msgReceived, setMsgRcvd] = useState('')\n    const [keyContainer, setKeyContainer] = useState(false)\n    const [sessionKey, setKey] = useState('')\n    const [keyForm, showKeyForm] = useState(false)\n    const [show, setShow] = useState(false)\n\n    const onSubmit = async (roomKey) => {\n        // check if the key exists in db\n        const res = await fetch('http://localhost:3001/room/', {\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/json'\n            },\n            body: JSON.stringify({\n                sessionKey: roomKey\n            })\n        })\n\n        const message = await res.json()\n        console.log(message)\n\n        // connect client to the session\n\n\n    }\n\n    const joinRoom = () => {\n        if (keyContainer) { // if key container exists\n            setKeyContainer(false) // remove key container\n        }\n\n        if (!keyForm) { // if it's not already showing then show it\n            showKeyForm(true)\n        }\n\n        // if (key !== '') {\n        //     socket.emit('join_room', {message: \"Hello\"})\n        // }\n    }\n\n    const makeRoom = async () => {\n        if (keyForm) { // if key form from join room exists\n            showKeyForm(false) // remove key form\n        }\n\n        if (!keyContainer) { // if key not showing show it\n            setKeyContainer(true)\n\n            // get a new key from server\n            const newSession = await fetch('http://localhost:3001/key/', {\n                method: 'POST',\n                headers: {\n                    'Content-Type': 'application/json',\n                },\n                body: JSON.stringify({\n                    sessionUser: \"billy\", \n                })\n            })\n\n            const newKey = await newSession.json()\n            console.log(newKey)\n            setKey(newKey.sessionKey) // set the new key\n        }\n    }\n\n    const handleClick = (event) => {\n        setListen(event.target.getAttribute('data-value'))\n        handleOpen() // show modal\n    }\n\n    const handleClose = () => setShow(false)\n    const handleOpen = () => setShow(true)\n\n    const sendMessage = () => {\n        socket.emit(\"send_message\", {message: \"Hello\"}) // emit to back end \n    }\n\n    useEffect(() => {\n        socket.on('receive_message', (data) => {\n            setMsgRcvd(data.message)\n        })\n    }, [socket])\n\n\n    return (\n        <>\n            <h1>I want to listen</h1>\n            <div className=\"btn-container\">\n                <Button size=\"lg\" data-value=\"alone\" onClick={sendMessage}>alone</Button>\n                <Button size=\"lg\" data-value=\"friend\" onClick={handleClick}>with a friend</Button>\n            </div>\n            <Modal show={show} onHide={handleClose}>\n                <Modal.Header closeButton>\n                <Modal.Title>Modal heading</Modal.Title>\n                </Modal.Header>\n                <Modal.Body>\n                    <Button className=\"key-btn\" size=\"lg\" onClick={joinRoom}>Join room</Button>\n                    <Button className=\"key-btn\" size=\"lg\" onClick={makeRoom} id=\"make\">Make room</Button>\n                </Modal.Body>\n                <Modal.Footer style={{ justifyContent: 'flex-start' }}>\n                    {keyForm && <KeyForm onSubmit={onSubmit}/>}\n                    {keyContainer && <Key newKey={sessionKey}/>}\n                </Modal.Footer>\n            </Modal>\n            {/* <input onChange={(event) => {\n                setMessage(event.target.value)\n            }}\n            />\n            <h1>Message</h1>\n            {msgReceived} */}\n        </>\n    )\n}\n\nexport default Listen \n\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}