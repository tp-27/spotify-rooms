{"ast":null,"code":"var _jsxFileName = \"/Users/thomasphan/Desktop/listen-with-me-app/client/src/components/Room.js\",\n  _s = $RefreshSig$();\nimport RoomHeader from './RoomHeader';\nimport Dropdown from 'react-bootstrap/Dropdown';\nimport Button from 'react-bootstrap/Button';\nimport { Spotify } from 'react-spotify-embed';\nimport { useEffect, useState } from 'react';\nimport '../index.css';\nimport io from 'socket.io-client';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst socket = io.connect('http://localhost:3001'); // url from backend server\n\nconst Room = ({\n  key,\n  name\n}) => {\n  _s();\n  const tracks = [\"https://open.spotify.com/track/5ihDGnhQgMA0F0tk9fNLlA?si=4472348a63dd4f84\", \"https://open.spotify.com/album/0fUy6IdLHDpGNwavIlhEsl?si=mTiITmlHQpaGkoivGTv8Jw\", \"https://open.spotify.com/track/5ihDGnhQgMA0F0tk9fNLlA?si=4472348a63dd4f83\"];\n  const [track, setTrack] = useState(tracks[0]);\n  const [users, setUsers] = useState([]);\n  const [msg, setMsg] = useState('');\n\n  // useEffect(() => { // get this object from API call in object\n  //     console.log(key)\n\n  //     const getFriends = async () => {\n  //         try {\n  //             const res = await fetch('http://localhost:3001/friends/' , {\n  //                 method: 'POST',\n  //                 headers: {\n  //                     'Content-Type': 'application/json'\n  //                 },\n  //                 body: JSON.stringify({\n  //                     sessionKey: key\n  //                 })\n  //             })\n\n  //             const users = await res.json()\n  //             setUsers(users)\n  //             console.log(users)\n  //         } catch (error) {\n  //             console.log(error)\n  //         }\n  //     }\n\n  //     getFriends()\n  // }, [key])\n\n  const generateSong = () => {\n    let randTrack = getRandomNumberInRange();\n    // setTrack(tracks[randTrack])\n    // socket.emit('change_song', { song: tracks[randTrack] })\n    console.log(key);\n    socket.emit('send_message', {\n      message: \"Heyo\",\n      room: key\n    });\n  };\n  const getRandomNumberInRange = () => {\n    return Math.floor(Math.random() * (tracks.length - 0 + 1)) + 0;\n  };\n  useEffect(() => {\n    socket.on('receive_message', data => {\n      alert(data.message);\n    });\n  }, [socket]); // whenever event is emmited from server socket changes\n\n  // useEffect(() => {\n  //     socket.emit('join_room', {{ name: name }})\n  // }, [])\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"room\",\n    children: [/*#__PURE__*/_jsxDEV(RoomHeader, {\n      name: name\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: key\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      className: \"random-btn\",\n      onClick: generateSong,\n      children: \"Change song\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Spotify, {\n      link: track\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 70,\n    columnNumber: 9\n  }, this);\n};\n_s(Room, \"HCRye5Cjwv/TQIrq2GF1gejOxpM=\");\n_c = Room;\nexport default Room;\nvar _c;\n$RefreshReg$(_c, \"Room\");","map":{"version":3,"names":["RoomHeader","Dropdown","Button","Spotify","useEffect","useState","io","jsxDEV","_jsxDEV","socket","connect","Room","key","name","_s","tracks","track","setTrack","users","setUsers","msg","setMsg","generateSong","randTrack","getRandomNumberInRange","console","log","emit","message","room","Math","floor","random","length","on","data","alert","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","link","_c","$RefreshReg$"],"sources":["/Users/thomasphan/Desktop/listen-with-me-app/client/src/components/Room.js"],"sourcesContent":["import RoomHeader from './RoomHeader'\nimport Dropdown from 'react-bootstrap/Dropdown';\nimport Button from 'react-bootstrap/Button';\nimport { Spotify } from 'react-spotify-embed'\nimport { useEffect, useState } from 'react';\nimport '../index.css'\nimport io from 'socket.io-client'\n\nconst socket = io.connect('http://localhost:3001') // url from backend server\n\nconst Room = ({ key, name }) => {\n    const tracks = [\n            \"https://open.spotify.com/track/5ihDGnhQgMA0F0tk9fNLlA?si=4472348a63dd4f84\",\n            \"https://open.spotify.com/album/0fUy6IdLHDpGNwavIlhEsl?si=mTiITmlHQpaGkoivGTv8Jw\",\n            \"https://open.spotify.com/track/5ihDGnhQgMA0F0tk9fNLlA?si=4472348a63dd4f83\"\n    ]\n    const [track, setTrack] = useState(tracks[0])\n    const [users, setUsers] = useState([])\n    const [msg, setMsg] = useState('')\n    \n    // useEffect(() => { // get this object from API call in object\n    //     console.log(key)\n\n    //     const getFriends = async () => {\n    //         try {\n    //             const res = await fetch('http://localhost:3001/friends/' , {\n    //                 method: 'POST',\n    //                 headers: {\n    //                     'Content-Type': 'application/json'\n    //                 },\n    //                 body: JSON.stringify({\n    //                     sessionKey: key\n    //                 })\n    //             })\n    \n    //             const users = await res.json()\n    //             setUsers(users)\n    //             console.log(users)\n    //         } catch (error) {\n    //             console.log(error)\n    //         }\n    //     }\n\n    //     getFriends()\n    // }, [key])\n\n    const generateSong = () => {\n        let randTrack = getRandomNumberInRange()\n        // setTrack(tracks[randTrack])\n        // socket.emit('change_song', { song: tracks[randTrack] })\n        console.log(key)\n        socket.emit('send_message', { message: \"Heyo\", room: key })\n    }\n\n    const getRandomNumberInRange = () => {\n        return Math.floor(Math.random() * (tracks.length - 0 + 1)) + 0;\n    }\n\n    useEffect(() => {\n        socket.on('receive_message', (data) => { \n            alert(data.message)\n        })\n    }, [socket]) // whenever event is emmited from server socket changes\n    \n    // useEffect(() => {\n    //     socket.emit('join_room', {{ name: name }})\n    // }, [])\n\n    return (\n        <div className=\"room\">\n            <RoomHeader name={name}/>\n            <p>{key}</p>\n            <Button className=\"random-btn\" onClick={generateSong}>Change song</Button>\n        \n            <Spotify link={track} />\n\n            {/* <Dropdown>\n                <Dropdown.Toggle variant=\"success\" id=\"dropdown-basic\">\n                friends\n                </Dropdown.Toggle>\n        \n                <Dropdown.Menu>\n                    {users.map((user, index) => {\n                        return <Dropdown.Item key={index}>{user}</Dropdown.Item>;\n                    })}\n                </Dropdown.Menu>\n            </Dropdown>  */}\n        </div>\n       \n    )\n}\n\nexport default Room"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}