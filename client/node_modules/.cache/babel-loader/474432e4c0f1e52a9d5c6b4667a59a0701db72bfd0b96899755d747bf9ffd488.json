{"ast":null,"code":"import React, { createContext, useContext, useState, useEffect, useRef } from 'react';\nvar MUST_BE_WRAPPED_MESSAGE = \"Component must be wrapped with WebPlaybackSDK.\";\nvar SPOTIFY_WEB_PLAYBACK_SDK_URL = \"https://sdk.scdn.co/spotify-player.js\";\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n    return target;\n  };\n  return _extends.apply(this, arguments);\n}\nvar WebPlaybackSDKReadyContext = createContext(undefined);\nvar WebPlaybackSDKReadyProvider = function WebPlaybackSDKReadyProvider(_ref) {\n  var children = _ref.children;\n  var _useState = useState(false),\n    webPlaybackSDKReady = _useState[0],\n    setWebPlaybackSDKReady = _useState[1];\n  useEffect(function () {\n    window.onSpotifyWebPlaybackSDKReady = function () {\n      setWebPlaybackSDKReady(true);\n    };\n  }, []);\n  return React.createElement(WebPlaybackSDKReadyContext.Provider, {\n    value: webPlaybackSDKReady\n  }, children);\n};\nfunction useWebPlaybackSDKReady() {\n  var value = useContext(WebPlaybackSDKReadyContext);\n  if (value === undefined) throw new Error(MUST_BE_WRAPPED_MESSAGE);\n  return value;\n}\nvar PlayerContext = createContext(undefined);\nvar SpotifyPlayerProvider = function SpotifyPlayerProvider(_ref) {\n  var children = _ref.children,\n    initialDeviceName = _ref.initialDeviceName,\n    getOAuthToken = _ref.getOAuthToken,\n    initialVolume = _ref.initialVolume,\n    connectOnInitialized = _ref.connectOnInitialized;\n  var _useState = useState(null),\n    player = _useState[0],\n    setPlayer = _useState[1];\n  var webPlaybackSDKReady = useWebPlaybackSDKReady(); // to get the latest function.\n\n  var getOAuthTokenRef = useRef(getOAuthToken);\n  getOAuthTokenRef.current = getOAuthToken; // create Spotify.Player instance.\n\n  useEffect(function () {\n    if (webPlaybackSDKReady) {\n      var _player = new Spotify.Player({\n        name: initialDeviceName,\n        getOAuthToken: function getOAuthToken(callback) {\n          return getOAuthTokenRef.current(callback);\n        },\n        volume: initialVolume\n      });\n      setPlayer(_player);\n      if (connectOnInitialized) {\n        _player.connect();\n      }\n      return function () {\n        return _player.disconnect();\n      };\n    }\n  },\n  // `deviceName` and `volume` are intentionally not passed.\n  // When they are changed, they will be applied with the following useUpdateEffect.\n  [connectOnInitialized, webPlaybackSDKReady]);\n  return React.createElement(PlayerContext.Provider, {\n    value: player,\n    children: children\n  });\n};\nfunction useSpotifyPlayer() {\n  var value = useContext(PlayerContext);\n  if (value === undefined) throw new Error(MUST_BE_WRAPPED_MESSAGE);\n  return value;\n}\nvar DeviceContext = createContext(undefined);\nvar DeviceProvider = function DeviceProvider(_ref) {\n  var children = _ref.children;\n  var _useState = useState(null),\n    device = _useState[0],\n    setDevice = _useState[1];\n  var player = useSpotifyPlayer();\n  useEffect(function () {\n    if (player === null) return;\n    var ready = function ready(device) {\n      setDevice(_extends({}, device, {\n        status: \"ready\"\n      }));\n    };\n    var notReady = function notReady(device) {\n      setDevice(_extends({}, device, {\n        status: \"not_ready\"\n      }));\n    };\n    player.addListener(\"ready\", ready);\n    player.addListener(\"not_ready\", notReady);\n    return function () {\n      player.removeListener(\"ready\", ready);\n      player.removeListener(\"not_ready\", notReady);\n    };\n  }, [player]);\n  return React.createElement(DeviceContext.Provider, {\n    value: device,\n    children: children\n  });\n};\nfunction usePlayerDevice() {\n  var value = useContext(DeviceContext);\n  if (value === undefined) throw new Error(MUST_BE_WRAPPED_MESSAGE);\n  return value;\n}\nvar ErrorStateContext = createContext(undefined);\nvar ErrorStateProvider = function ErrorStateProvider(_ref) {\n  var children = _ref.children;\n  var _useState = useState(null),\n    errorState = _useState[0],\n    setErrorState = _useState[1];\n  var player = useSpotifyPlayer();\n  useEffect(function () {\n    if (player === null) return;\n    var onInitializationError = function onInitializationError(error) {\n      setErrorState(_extends({}, error, {\n        type: \"initialization_error\"\n      }));\n    };\n    var onAuthenticationError = function onAuthenticationError(error) {\n      setErrorState(_extends({}, error, {\n        type: \"authentication_error\"\n      }));\n    };\n    var onAccountError = function onAccountError(error) {\n      setErrorState(_extends({}, error, {\n        type: \"account_error\"\n      }));\n    };\n    var onPlaybackError = function onPlaybackError(error) {\n      setErrorState(_extends({}, error, {\n        type: \"playback_error\"\n      }));\n    };\n    player.addListener(\"initialization_error\", onInitializationError);\n    player.addListener(\"authentication_error\", onAuthenticationError);\n    player.addListener(\"account_error\", onAccountError);\n    player.addListener(\"playback_error\", onPlaybackError);\n    return function () {\n      player.removeListener(\"initialization_error\", onInitializationError);\n      player.removeListener(\"authentication_error\", onAuthenticationError);\n      player.removeListener(\"account_error\", onAccountError);\n      player.removeListener(\"playback_error\", onPlaybackError);\n    };\n  }, [player]);\n  return React.createElement(ErrorStateContext.Provider, {\n    value: errorState,\n    children: children\n  });\n};\nfunction useErrorState() {\n  var value = useContext(ErrorStateContext);\n  if (value === undefined) throw new Error(MUST_BE_WRAPPED_MESSAGE);\n  return value;\n}\nvar PlaybackStateContext = createContext(undefined);\nvar PlaybackStateProvider = function PlaybackStateProvider(_ref) {\n  var children = _ref.children;\n  var _useState = useState(null),\n    playbackState = _useState[0],\n    setPlaybackState = _useState[1];\n  var player = useSpotifyPlayer();\n  useEffect(function () {\n    if (player === null) return;\n    var playerStateChanged = function playerStateChanged(state) {\n      setPlaybackState(state);\n    };\n    player.addListener(\"player_state_changed\", playerStateChanged);\n    return function () {\n      return player.removeListener(\"player_state_changed\", playerStateChanged);\n    };\n  }, [player]);\n  return React.createElement(PlaybackStateContext.Provider, {\n    value: playbackState,\n    children: children\n  });\n};\nfunction usePlaybackState(interval, durationMS) {\n  if (interval === void 0) {\n    interval = false;\n  }\n  if (durationMS === void 0) {\n    durationMS = 1000;\n  }\n  var fromContext = useContext(PlaybackStateContext);\n  if (fromContext === undefined) throw new Error(MUST_BE_WRAPPED_MESSAGE);\n  var _useState2 = useState(fromContext),\n    playbackState = _useState2[0],\n    setPlaybackState = _useState2[1];\n  var player = useSpotifyPlayer();\n  useEffect(function () {\n    return setPlaybackState(fromContext);\n  }, [fromContext]);\n  var playbackStateIsNull = playbackState === null;\n  useEffect(function () {\n    if (!interval) return;\n    if (player === null) return;\n    if (playbackStateIsNull) return;\n    if (playbackState.paused) return;\n    var intervalId = window.setInterval(function () {\n      try {\n        return Promise.resolve(player.getCurrentState()).then(function (newState) {\n          setPlaybackState(newState);\n        });\n      } catch (e) {\n        return Promise.reject(e);\n      }\n    }, durationMS);\n    return function () {\n      return window.clearInterval(intervalId);\n    };\n  }, [interval, player, playbackStateIsNull, playbackState == null ? void 0 : playbackState.paused, durationMS]);\n  return playbackState;\n}\nvar WebPlaybackSDK = function WebPlaybackSDK(_ref) {\n  var children = _ref.children,\n    initialDeviceName = _ref.initialDeviceName,\n    getOAuthToken = _ref.getOAuthToken,\n    initialVolume = _ref.initialVolume,\n    _ref$connectOnInitial = _ref.connectOnInitialized,\n    connectOnInitialized = _ref$connectOnInitial === void 0 ? true : _ref$connectOnInitial;\n  useEffect(function () {\n    // load Web Playback SDK.\n    var script = document.createElement(\"script\");\n    script.src = SPOTIFY_WEB_PLAYBACK_SDK_URL;\n    document.body.appendChild(script);\n    return function () {\n      document.body.removeChild(script);\n    };\n  }, []);\n  return React.createElement(WebPlaybackSDKReadyProvider, null, React.createElement(SpotifyPlayerProvider, {\n    initialDeviceName: initialDeviceName,\n    getOAuthToken: getOAuthToken,\n    initialVolume: initialVolume,\n    connectOnInitialized: connectOnInitialized\n  }, React.createElement(PlaybackStateProvider, null, React.createElement(DeviceProvider, null, React.createElement(ErrorStateProvider, null, children)))));\n};\nexport { WebPlaybackSDK, useErrorState, usePlaybackState, usePlayerDevice, useSpotifyPlayer, useWebPlaybackSDKReady };","map":{"version":3,"names":["MUST_BE_WRAPPED_MESSAGE","SPOTIFY_WEB_PLAYBACK_SDK_URL","WebPlaybackSDKReadyContext","createContext","undefined","WebPlaybackSDKReadyProvider","_ref","children","useState","webPlaybackSDKReady","_useState","setWebPlaybackSDKReady","useEffect","window","onSpotifyWebPlaybackSDKReady","React","createElement","Provider","value","useWebPlaybackSDKReady","useContext","Error","PlayerContext","SpotifyPlayerProvider","initialDeviceName","getOAuthToken","initialVolume","connectOnInitialized","player","setPlayer","getOAuthTokenRef","useRef","current","_player","Spotify","Player","name","callback","volume","connect","disconnect","useSpotifyPlayer","DeviceContext","DeviceProvider","device","setDevice","ready","_extends","status","notReady","addListener","removeListener","usePlayerDevice","ErrorStateContext","ErrorStateProvider","errorState","setErrorState","onInitializationError","error","type","onAuthenticationError","onAccountError","onPlaybackError","useErrorState","PlaybackStateContext","PlaybackStateProvider","playbackState","setPlaybackState","playerStateChanged","state","usePlaybackState","interval","durationMS","fromContext","_useState2","playbackStateIsNull","paused","intervalId","setInterval","getCurrentState","then","newState","e","Promise","reject","clearInterval","WebPlaybackSDK","_ref$connectOnInitial","script","document","src","body","appendChild","removeChild"],"sources":["/Users/thomasphan/Desktop/listen-with-me-app/client/node_modules/react-spotify-web-playback-sdk/src/constant.ts","/Users/thomasphan/Desktop/listen-with-me-app/client/node_modules/react-spotify-web-playback-sdk/src/webPlaybackSDKReady.tsx","/Users/thomasphan/Desktop/listen-with-me-app/client/node_modules/react-spotify-web-playback-sdk/src/spotifyPlayer.tsx","/Users/thomasphan/Desktop/listen-with-me-app/client/node_modules/react-spotify-web-playback-sdk/src/device.tsx","/Users/thomasphan/Desktop/listen-with-me-app/client/node_modules/react-spotify-web-playback-sdk/src/errorState.tsx","/Users/thomasphan/Desktop/listen-with-me-app/client/node_modules/react-spotify-web-playback-sdk/src/playbackState.tsx","/Users/thomasphan/Desktop/listen-with-me-app/client/node_modules/react-spotify-web-playback-sdk/src/webPlaybackSDK.tsx"],"sourcesContent":["export const MUST_BE_WRAPPED_MESSAGE =\n  \"Component must be wrapped with WebPlaybackSDK.\";\n\nexport const SPOTIFY_WEB_PLAYBACK_SDK_URL = \"https://sdk.scdn.co/spotify-player.js\";\n","import React, { createContext, useContext, useEffect, useState } from \"react\";\nimport { MUST_BE_WRAPPED_MESSAGE } from \"./constant\";\n\nconst WebPlaybackSDKReadyContext = createContext<boolean | undefined>(undefined);\n\nexport const WebPlaybackSDKReadyProvider: React.FC<{\n  children?: React.ReactNode;\n}> = ({ children }) => {\n  const [webPlaybackSDKReady, setWebPlaybackSDKReady] = useState(false);\n\n  useEffect(() => {\n    window.onSpotifyWebPlaybackSDKReady = () => {\n      setWebPlaybackSDKReady(true);\n    };\n  }, []);\n\n  return (\n    <WebPlaybackSDKReadyContext.Provider value={webPlaybackSDKReady}>\n      {children}\n    </WebPlaybackSDKReadyContext.Provider>\n  );\n};\n\nexport function useWebPlaybackSDKReady() {\n  const value = useContext(WebPlaybackSDKReadyContext);\n\n  if (value === undefined) throw new Error(MUST_BE_WRAPPED_MESSAGE);\n\n  return value;\n}\n","import React, {\n  createContext,\n  useContext,\n  useEffect,\n  useRef,\n  useState,\n} from \"react\";\nimport { MUST_BE_WRAPPED_MESSAGE } from \"./constant\";\nimport { useWebPlaybackSDKReady } from \"./webPlaybackSDKReady\";\n\nconst PlayerContext = createContext<Spotify.Player | null | undefined>(undefined);\n\ntype ProviderProps = {\n  initialDeviceName: Spotify.PlayerInit[\"name\"];\n  getOAuthToken: Spotify.PlayerInit[\"getOAuthToken\"];\n  initialVolume?: Spotify.PlayerInit[\"volume\"];\n  connectOnInitialized: boolean;\n  children?: React.ReactNode;\n};\n\nexport const SpotifyPlayerProvider: React.FC<ProviderProps> = ({\n  children,\n  initialDeviceName,\n  getOAuthToken,\n  initialVolume,\n  connectOnInitialized,\n}) => {\n  const [player, setPlayer] = useState<Spotify.Player | null>(null);\n  const webPlaybackSDKReady = useWebPlaybackSDKReady();\n\n  // to get the latest function.\n  const getOAuthTokenRef = useRef(getOAuthToken);\n  getOAuthTokenRef.current = getOAuthToken;\n\n  // create Spotify.Player instance.\n  useEffect(\n    () => {\n      if (webPlaybackSDKReady) {\n        const player = new Spotify.Player({\n          name: initialDeviceName,\n          getOAuthToken: callback => getOAuthTokenRef.current(callback),\n          volume: initialVolume,\n        });\n\n        setPlayer(player);\n\n        if (connectOnInitialized) {\n          player.connect();\n        }\n\n        return () => player.disconnect();\n      }\n    },\n    // `deviceName` and `volume` are intentionally not passed.\n    // When they are changed, they will be applied with the following useUpdateEffect.\n    [connectOnInitialized, webPlaybackSDKReady],\n  );\n\n  return <PlayerContext.Provider value={player} children={children} />;\n};\n\nexport function useSpotifyPlayer() {\n  const value = useContext(PlayerContext);\n\n  if (value === undefined) throw new Error(MUST_BE_WRAPPED_MESSAGE);\n\n  return value;\n}\n","import React, { createContext, useContext, useEffect, useState } from \"react\";\nimport { MUST_BE_WRAPPED_MESSAGE } from \"./constant\";\nimport { useSpotifyPlayer } from \"./spotifyPlayer\";\n\nexport type PlayerDevice = Spotify.WebPlaybackInstance & {\n  status: \"ready\" | \"not_ready\";\n};\n\nconst DeviceContext = createContext<PlayerDevice | null | undefined>(undefined);\n\nexport const DeviceProvider: React.FC<{ children?: React.ReactNode }> = ({\n  children,\n}) => {\n  const [device, setDevice] = useState<PlayerDevice | null>(null);\n  const player = useSpotifyPlayer();\n\n  useEffect(() => {\n    if (player === null) return;\n\n    const ready = (device: Spotify.WebPlaybackInstance) => {\n      setDevice({ ...device, status: \"ready\" });\n    };\n\n    const notReady = (device: Spotify.WebPlaybackInstance) => {\n      setDevice({ ...device, status: \"not_ready\" });\n    };\n\n    player.addListener(\"ready\", ready);\n    player.addListener(\"not_ready\", notReady);\n\n    return () => {\n      player.removeListener(\"ready\", ready);\n      player.removeListener(\"not_ready\", notReady);\n    };\n  }, [player]);\n\n  return <DeviceContext.Provider value={device} children={children} />;\n};\n\nexport function usePlayerDevice() {\n  const value = useContext(DeviceContext);\n\n  if (value === undefined) throw new Error(MUST_BE_WRAPPED_MESSAGE);\n\n  return value;\n}\n","import React, { createContext, useContext, useEffect, useState } from \"react\";\nimport { MUST_BE_WRAPPED_MESSAGE } from \"./constant\";\nimport { useSpotifyPlayer } from \"./spotifyPlayer\";\n\nexport type ErrorState = Spotify.Error & { type: Spotify.ErrorTypes };\n\nconst ErrorStateContext = createContext<ErrorState | null | undefined>(undefined);\n\nexport const ErrorStateProvider: React.FC<{ children?: React.ReactNode }> = ({\n  children,\n}) => {\n  const [errorState, setErrorState] = useState<ErrorState | null>(null);\n  const player = useSpotifyPlayer();\n\n  useEffect(() => {\n    if (player === null) return;\n\n    const onInitializationError = (error: Spotify.Error) => {\n      setErrorState({ ...error, type: \"initialization_error\" });\n    };\n\n    const onAuthenticationError = (error: Spotify.Error) => {\n      setErrorState({ ...error, type: \"authentication_error\" });\n    };\n\n    const onAccountError = (error: Spotify.Error) => {\n      setErrorState({ ...error, type: \"account_error\" });\n    };\n\n    const onPlaybackError = (error: Spotify.Error) => {\n      setErrorState({ ...error, type: \"playback_error\" });\n    };\n\n    player.addListener(\"initialization_error\", onInitializationError);\n    player.addListener(\"authentication_error\", onAuthenticationError);\n    player.addListener(\"account_error\", onAccountError);\n    player.addListener(\"playback_error\", onPlaybackError);\n\n    return () => {\n      player.removeListener(\"initialization_error\", onInitializationError);\n      player.removeListener(\"authentication_error\", onAuthenticationError);\n      player.removeListener(\"account_error\", onAccountError);\n      player.removeListener(\"playback_error\", onPlaybackError);\n    };\n  }, [player]);\n\n  return <ErrorStateContext.Provider value={errorState} children={children} />;\n};\n\nexport function useErrorState() {\n  const value = useContext(ErrorStateContext);\n\n  if (value === undefined) throw new Error(MUST_BE_WRAPPED_MESSAGE);\n\n  return value;\n}\n","import React, { createContext, useContext, useEffect, useState } from \"react\";\nimport { MUST_BE_WRAPPED_MESSAGE } from \"./constant\";\nimport { useSpotifyPlayer } from \"./spotifyPlayer\";\n\nconst PlaybackStateContext = createContext<Spotify.PlaybackState | null | undefined>(\n  undefined,\n);\n\nexport const PlaybackStateProvider: React.FC<{ children?: React.ReactNode }> = ({\n  children,\n}) => {\n  const [playbackState, setPlaybackState] = useState<Spotify.PlaybackState | null>(\n    null,\n  );\n\n  const player = useSpotifyPlayer();\n\n  useEffect(() => {\n    if (player === null) return;\n\n    const playerStateChanged = (state: Spotify.PlaybackState) => {\n      setPlaybackState(state);\n    };\n\n    player.addListener(\"player_state_changed\", playerStateChanged);\n\n    return () => player.removeListener(\"player_state_changed\", playerStateChanged);\n  }, [player]);\n\n  return <PlaybackStateContext.Provider value={playbackState} children={children} />;\n};\n\nexport function usePlaybackState(\n  interval = false,\n  durationMS = 1000,\n): Spotify.PlaybackState | null {\n  const fromContext = useContext(PlaybackStateContext);\n\n  if (fromContext === undefined) throw new Error(MUST_BE_WRAPPED_MESSAGE);\n\n  const [playbackState, setPlaybackState] = useState(fromContext);\n\n  const player = useSpotifyPlayer();\n\n  useEffect(() => setPlaybackState(fromContext), [fromContext]);\n\n  const playbackStateIsNull = playbackState === null;\n  useEffect(() => {\n    if (!interval) return;\n    if (player === null) return;\n    if (playbackStateIsNull) return;\n\n    if (playbackState!.paused) return;\n\n    const intervalId = window.setInterval(async () => {\n      const newState = await player.getCurrentState();\n      setPlaybackState(newState);\n    }, durationMS);\n\n    return () => window.clearInterval(intervalId);\n  }, [interval, player, playbackStateIsNull, playbackState?.paused, durationMS]);\n\n  return playbackState;\n}\n","import React, { useEffect } from \"react\";\nimport { SPOTIFY_WEB_PLAYBACK_SDK_URL } from \"./constant\";\nimport { DeviceProvider } from \"./device\";\nimport { ErrorStateProvider } from \"./errorState\";\nimport { PlaybackStateProvider } from \"./playbackState\";\nimport { SpotifyPlayerProvider } from \"./spotifyPlayer\";\nimport { WebPlaybackSDKReadyProvider } from \"./webPlaybackSDKReady\";\n\nexport type WebPlaybackSDKProps = {\n  initialDeviceName: Spotify.PlayerInit[\"name\"];\n  getOAuthToken: Spotify.PlayerInit[\"getOAuthToken\"];\n  initialVolume?: Spotify.PlayerInit[\"volume\"];\n  connectOnInitialized?: boolean;\n  children?: React.ReactNode;\n};\n\nexport const WebPlaybackSDK: React.FC<WebPlaybackSDKProps> = ({\n  children,\n  initialDeviceName,\n  getOAuthToken,\n  initialVolume,\n  connectOnInitialized = true,\n}) => {\n  useEffect(() => {\n    // load Web Playback SDK.\n    const script = document.createElement(\"script\");\n    script.src = SPOTIFY_WEB_PLAYBACK_SDK_URL;\n    document.body.appendChild(script);\n\n    return () => {\n      document.body.removeChild(script);\n    };\n  }, []);\n\n  return (\n    <WebPlaybackSDKReadyProvider>\n      <SpotifyPlayerProvider\n        initialDeviceName={initialDeviceName}\n        getOAuthToken={getOAuthToken}\n        initialVolume={initialVolume}\n        connectOnInitialized={connectOnInitialized}>\n        <PlaybackStateProvider>\n          <DeviceProvider>\n            <ErrorStateProvider>{children}</ErrorStateProvider>\n          </DeviceProvider>\n        </PlaybackStateProvider>\n      </SpotifyPlayerProvider>\n    </WebPlaybackSDKReadyProvider>\n  );\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}