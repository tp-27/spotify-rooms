{"ast":null,"code":"var _jsxFileName = \"/Users/thomasphan/Desktop/spotify-rooms/client/src/App.js\",\n  _s = $RefreshSig$();\nimport Listen from './components/Listen';\nimport User from './components/User';\nimport Room from './components/Room';\nimport SpotifyPlayer from './components/SpotifyPlayer';\nimport Button from 'react-bootstrap/Button';\nimport { useState, useEffect } from 'react';\nimport { Spotify } from 'react-spotify-embed';\nimport './index.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [user, setUser] = useState('');\n  const [getUser, setGetUser] = useState(true);\n  const [listening, setListen] = useState(false);\n  const [room, setRoom] = useState('');\n  const [key, setKey] = useState('');\n  const [token, setToken] = useState('');\n  const onSubmit = async (e, name) => {\n    e.preventDefault();\n    setUser(name);\n    try {\n      const res = await fetch('http://localhost:3001/listen', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          name: name\n        })\n      });\n      const data = await res.json();\n      console.log(data);\n      // console.log(document.cookie)\n    } catch (error) {\n      console.log('Unable to start listening: ' + error);\n    }\n    setGetUser(false);\n  };\n  const onListen = (sessionKey, roomName) => {\n    setKey(sessionKey);\n    setRoom(roomName);\n    console.log(\"Listening in room: \" + roomName + sessionKey);\n    setListen(true);\n  };\n  useEffect(() => {\n    const hash = window.location.hash; // look for hash in url\n    let token = window.localStorage.getItem(\"token\"); // look for token in local storage\n\n    if (!token && hash) {\n      // if no token but here is hash in url\n      token = hash.substring(1).split('&').find(elem => elem.startsWith('access_token')).split('=')[1]; // parse hash\n\n      console.log(window.location.hash);\n      window.location.hash = ''; // remove hash from url\n      window.localStorage.setItem('token', token); // set token into local storage\n    }\n    setToken(token);\n  }, []);\n\n  // const openAuth = async () => {\n  //     try {\n  //         console.log('login');\n  //         const response = await fetch('http://localhost:3001/login')\n  //         const data = await response.json()\n  //         console.log(data)\n\n  //         // window.location.href = data\n  //     } catch (error) {\n  //         console.log('Unable to authenticate Spotify: ' + error);\n  //     }\n  // }\n\n  const logout = () => {\n    setToken('');\n    window.localStorage.removeItem('token'); // remove token from local storage\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"content-body\",\n      children: [!listening ? getUser ? /*#__PURE__*/_jsxDEV(User, {\n        onSubmit: onSubmit\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 32\n      }, this) : /*#__PURE__*/_jsxDEV(Listen, {\n        user: user,\n        onListen: onListen\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 62\n      }, this) : null, listening && key && /*#__PURE__*/_jsxDEV(Room, {\n        roomKey: key,\n        name: room\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 40\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 86,\n    columnNumber: 9\n  }, this);\n}\n_s(App, \"42enp4Kj/YcoRx3n6bktLVK2lgQ=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["Listen","User","Room","SpotifyPlayer","Button","useState","useEffect","Spotify","jsxDEV","_jsxDEV","App","_s","user","setUser","getUser","setGetUser","listening","setListen","room","setRoom","key","setKey","token","setToken","onSubmit","e","name","preventDefault","res","fetch","method","headers","body","JSON","stringify","data","json","console","log","error","onListen","sessionKey","roomName","hash","window","location","localStorage","getItem","substring","split","find","elem","startsWith","setItem","logout","removeItem","className","children","fileName","_jsxFileName","lineNumber","columnNumber","roomKey","_c","$RefreshReg$"],"sources":["/Users/thomasphan/Desktop/spotify-rooms/client/src/App.js"],"sourcesContent":["import Listen from './components/Listen'\nimport User from './components/User'\nimport Room from './components/Room'\nimport SpotifyPlayer from './components/SpotifyPlayer'\nimport Button from 'react-bootstrap/Button'\nimport { useState, useEffect } from 'react'\nimport { Spotify } from 'react-spotify-embed'\nimport './index.css'\n\n\nfunction App() {\n    const [user, setUser] = useState('')\n    const [getUser, setGetUser] = useState(true)\n    const [listening, setListen] = useState(false) \n    const [room, setRoom] = useState('')\n    const [key, setKey] = useState('')\n    const [token, setToken] = useState('')\n\n    const onSubmit = async (e, name) => {\n        e.preventDefault()\n        setUser(name)\n\n        try {\n            const res = await fetch('http://localhost:3001/listen', {\n                method: 'POST',\n                headers: {\n                    'Content-Type': 'application/json'\n                },\n                body: JSON.stringify({\n                    name: name\n                })\n            })   \n            \n            const data = await res.json()\n            console.log(data)\n            // console.log(document.cookie)\n        } catch (error) {\n            console.log('Unable to start listening: ' + error)\n        }\n       \n        setGetUser(false)\n    }\n\n    const onListen = (sessionKey, roomName) => {\n        setKey(sessionKey)\n        setRoom(roomName)\n        console.log(\"Listening in room: \" + roomName + sessionKey)\n        setListen(true)\n        \n    }\n\n    useEffect(() => {\n        const hash = window.location.hash // look for hash in url\n        let token = window.localStorage.getItem(\"token\") // look for token in local storage\n\n        if (!token && hash) { // if no token but here is hash in url\n            token = hash.substring(1).split('&').find(elem => elem.startsWith('access_token')).split('=')[1] // parse hash\n            \n            console.log(window.location.hash)\n            window.location.hash = '' // remove hash from url\n            window.localStorage.setItem('token', token) // set token into local storage\n        }\n\n        setToken(token)\n    }, [])\n\n    // const openAuth = async () => {\n    //     try {\n    //         console.log('login');\n    //         const response = await fetch('http://localhost:3001/login')\n    //         const data = await response.json()\n    //         console.log(data)\n\n    //         // window.location.href = data\n    //     } catch (error) {\n    //         console.log('Unable to authenticate Spotify: ' + error);\n    //     }\n    // }\n\n    const logout = () => {\n        setToken('') \n        window.localStorage.removeItem('token') // remove token from local storage\n    }\n\n    return (\n        <div className=\"container\">\n            {/* <div className=\"nav\">\n                {!token ?\n                    <Button onClick={openAuth}>Login</Button> :\n                    <Button className='logout' onClick={logout}>Logout</Button>\n                }\n            </div> */}\n                \n            <div className=\"content-body\">\n                {(!listening) ?\n                    (getUser ? <User onSubmit={onSubmit}/> : <Listen user={user} onListen={onListen}/>) :\n                    null\n                }       \n\n                {(listening && key) && <Room roomKey={key} name={room}/>}   \n                {/* <Room roomKey={key} name={room} /> */}\n            </div>\n            \n        </div>\n\n    );\n}\n\nexport default App\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}