{"ast":null,"code":"var _jsxFileName = \"/Users/thomasphan/Desktop/spotify-rooms/client/src/App.js\",\n  _s = $RefreshSig$();\nimport Listen from './components/Listen';\nimport User from './components/User';\nimport Room from './components/Room';\nimport SpotifyPlayer from './components/SpotifyPlayer';\nimport Button from 'react-bootstrap/Button';\nimport { useState, useEffect } from 'react';\nimport { Spotify } from 'react-spotify-embed';\nimport './index.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [user, setUser] = useState('');\n  const [getUser, setGetUser] = useState(true);\n  const [listening, setListen] = useState(false);\n  const [room, setRoom] = useState('');\n  const [key, setKey] = useState('');\n  const [auth, setAuth] = useState(false);\n  const onSubmit = async (e, name) => {\n    e.preventDefault();\n    setUser(name);\n    try {\n      const res = await fetch('http://localhost:3001/listen', {\n        method: 'POST',\n        credentials: 'include',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          name: name\n        })\n      });\n      const data = await res.json();\n      if (data.message === 'Success') {\n        setGetUser(false);\n      } else {\n        alert('Please authenticate to use this application.');\n        setGetUser(true);\n      }\n    } catch (error) {\n      console.log('Unable to start listening: ' + error);\n    }\n  };\n  const onListen = (sessionKey, roomName) => {\n    setKey(sessionKey);\n    setRoom(roomName);\n    console.log(\"Listening in room: \" + roomName + sessionKey);\n    setListen(true);\n  };\n  useEffect(() => {\n    const verifyAuth = async () => {\n      try {\n        const res = await fetch('http://localhost:3001/verify');\n        const data = await res.json();\n        console.log(data);\n        if (data.verifiable) {\n          setAuth(true);\n        }\n      } catch (error) {\n        console.log(error);\n      }\n    };\n    if (!getUser) {\n      verifyAuth(); // if we have already set the user's cookie \n    }\n  }, [getUser]);\n\n  // const openAuth = async () => {\n  //     try {\n  //         console.log('login');\n  //         const response = await fetch('http://localhost:3001/login')\n  //         const data = await response.json()\n  //         console.log(data)\n\n  //         // window.location.href = data\n  //     } catch (error) {\n  //         console.log('Unable to authenticate Spotify: ' + error);\n  //     }\n  // }\n\n  // const logout = () => {\n  //     setToken('') \n  //     window.localStorage.removeItem('token') // remove token from local storage\n  // }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"content-body\",\n      children: getUser ? /*#__PURE__*/_jsxDEV(User, {\n        onSubmit: onSubmit\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 21\n      }, this) : /*#__PURE__*/_jsxDEV(Listen, {\n        user: user,\n        onListen: onListen\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 51\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 96,\n    columnNumber: 9\n  }, this);\n}\n_s(App, \"GTJSd6e5Cc3t4tmGk7JsotzN6Ys=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["Listen","User","Room","SpotifyPlayer","Button","useState","useEffect","Spotify","jsxDEV","_jsxDEV","App","_s","user","setUser","getUser","setGetUser","listening","setListen","room","setRoom","key","setKey","auth","setAuth","onSubmit","e","name","preventDefault","res","fetch","method","credentials","headers","body","JSON","stringify","data","json","message","alert","error","console","log","onListen","sessionKey","roomName","verifyAuth","verifiable","className","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/thomasphan/Desktop/spotify-rooms/client/src/App.js"],"sourcesContent":["import Listen from './components/Listen'\nimport User from './components/User'\nimport Room from './components/Room'\nimport SpotifyPlayer from './components/SpotifyPlayer'\nimport Button from 'react-bootstrap/Button'\nimport { useState, useEffect } from 'react'\nimport { Spotify } from 'react-spotify-embed'\nimport './index.css'\n\n\nfunction App() {\n    const [user, setUser] = useState('')\n    const [getUser, setGetUser] = useState(true)\n    const [listening, setListen] = useState(false) \n    const [room, setRoom] = useState('')\n    const [key, setKey] = useState('')\n    const [auth, setAuth] = useState(false)\n\n    const onSubmit = async (e, name) => {\n        e.preventDefault()\n        setUser(name)\n\n        try {\n            const res = await fetch('http://localhost:3001/listen', {\n                method: 'POST',\n                credentials: 'include',\n                headers: {\n                    'Content-Type': 'application/json'\n                },\n                body: JSON.stringify({\n                    name: name\n                })\n            })   \n            \n            const data = await res.json()\n            if (data.message === 'Success') {\n                setGetUser(false)\n            } else {\n                alert('Please authenticate to use this application.')\n                setGetUser(true)\n            }\n\n        } catch (error) {\n            console.log('Unable to start listening: ' + error)\n        }\n    }\n\n    const onListen = (sessionKey, roomName) => {\n        setKey(sessionKey)\n        setRoom(roomName)\n        console.log(\"Listening in room: \" + roomName + sessionKey)\n        setListen(true)\n        \n    }\n\n    useEffect(() => {\n        const verifyAuth = async () => {\n            try {   \n                const res = await fetch('http://localhost:3001/verify')\n                const data = await res.json()\n\n                console.log(data)\n                if (data.verifiable) {\n                    setAuth(true)\n                }\n            } catch (error) {\n                console.log(error)\n            }\n        }\n\n        if (!getUser) {\n            verifyAuth() // if we have already set the user's cookie \n        }\n        \n    }, [getUser])\n\n    // const openAuth = async () => {\n    //     try {\n    //         console.log('login');\n    //         const response = await fetch('http://localhost:3001/login')\n    //         const data = await response.json()\n    //         console.log(data)\n\n    //         // window.location.href = data\n    //     } catch (error) {\n    //         console.log('Unable to authenticate Spotify: ' + error);\n    //     }\n    // }\n\n    // const logout = () => {\n    //     setToken('') \n    //     window.localStorage.removeItem('token') // remove token from local storage\n    // }\n\n    return (\n        <div className=\"container\">\n            {/* <div className=\"nav\">\n                {!token ?\n                    <Button onClick={openAuth}>Login</Button> :\n                    <Button className='logout' onClick={logout}>Logout</Button>\n                }\n            </div> */}\n                \n            <div className=\"content-body\">\n                { getUser ?\n                    <User onSubmit={onSubmit}/> : <Listen user={user} onListen={onListen} / >\n\n                }       \n\n                {/* { (auth && !getUser) &&   } */}\n                {/* { auth && <Room roomKey={key} name={room}/>}    */}\n                {/* <Room roomKey={key} name={room} /> */}\n            </div>\n            \n        </div>\n\n    );\n}\n\nexport default App\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}