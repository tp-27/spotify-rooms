{"ast":null,"code":"var _jsxFileName = \"/Users/thomasphan/Desktop/listen-with-me-app/client/src/components/Room.js\",\n  _s = $RefreshSig$();\nimport RoomHeader from './RoomHeader';\nimport Dropdown from 'react-bootstrap/Dropdown';\nimport Button from 'react-bootstrap/Button';\nimport { Spotify } from 'react-spotify-embed';\nimport { useEffect, useState } from 'react';\nimport '../index.css';\nimport io from 'socket.io-client';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst socket = io.connect('http://localhost:3001'); // url from backend server\n\nconst Room = ({\n  key,\n  name\n}) => {\n  _s();\n  const tracks = [\"https://open.spotify.com/track/5ihDGnhQgMA0F0tk9fNLlA?si=4472348a63dd4f84\", \"https://open.spotify.com/album/0fUy6IdLHDpGNwavIlhEsl?si=mTiITmlHQpaGkoivGTv8Jw\", \"https://open.spotify.com/track/5ihDGnhQgMA0F0tk9fNLlA?si=4472348a63dd4f83\"];\n  const [track, setTrack] = useState(tracks[0]);\n  const [users, setUsers] = useState([]);\n  useEffect(() => {});\n\n  // useEffect(() => { // get this object from API call in object\n  //     console.log(key)\n\n  //     const getFriends = async () => {\n  //         try {\n  //             const res = await fetch('http://localhost:3001/friends/' , {\n  //                 method: 'POST',\n  //                 headers: {\n  //                     'Content-Type': 'application/json'\n  //                 },\n  //                 body: JSON.stringify({\n  //                     sessionKey: key\n  //                 })\n  //             })\n\n  //             const users = await res.json()\n  //             setUsers(users)\n  //             console.log(users)\n  //         } catch (error) {\n  //             console.log(error)\n  //         }\n  //     }\n\n  //     getFriends()\n  // }, [key])\n\n  const generateSong = () => {\n    let randTrack = getRandomNumberInRange();\n    setTrack(tracks[randTrack]);\n    // socket.emit('change_song', { song: tracks[randTrack] })\n    socket.emit('send_message', {\n      message: \"Heyo\"\n    });\n  };\n  const getRandomNumberInRange = () => {\n    return Math.floor(Math.random() * (tracks.length - 0 + 1)) + 0;\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"room\",\n    children: [/*#__PURE__*/_jsxDEV(RoomHeader, {\n      name: name\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      className: \"random-btn\",\n      onClick: generateSong,\n      children: \"Change song\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Spotify, {\n      link: track\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 63,\n    columnNumber: 9\n  }, this);\n};\n_s(Room, \"y0OyA0W7bmGM1ddfof3AV4j5ZyA=\");\n_c = Room;\nexport default Room;\nvar _c;\n$RefreshReg$(_c, \"Room\");","map":{"version":3,"names":["RoomHeader","Dropdown","Button","Spotify","useEffect","useState","io","jsxDEV","_jsxDEV","socket","connect","Room","key","name","_s","tracks","track","setTrack","users","setUsers","generateSong","randTrack","getRandomNumberInRange","emit","message","Math","floor","random","length","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","link","_c","$RefreshReg$"],"sources":["/Users/thomasphan/Desktop/listen-with-me-app/client/src/components/Room.js"],"sourcesContent":["import RoomHeader from './RoomHeader'\nimport Dropdown from 'react-bootstrap/Dropdown';\nimport Button from 'react-bootstrap/Button';\nimport { Spotify } from 'react-spotify-embed'\nimport { useEffect, useState } from 'react';\nimport '../index.css'\nimport io from 'socket.io-client'\n\nconst socket = io.connect('http://localhost:3001') // url from backend server\n\nconst Room = ({ key, name }) => {\n    const tracks = [\n            \"https://open.spotify.com/track/5ihDGnhQgMA0F0tk9fNLlA?si=4472348a63dd4f84\",\n            \"https://open.spotify.com/album/0fUy6IdLHDpGNwavIlhEsl?si=mTiITmlHQpaGkoivGTv8Jw\",\n            \"https://open.spotify.com/track/5ihDGnhQgMA0F0tk9fNLlA?si=4472348a63dd4f83\"\n    ]\n    const [track, setTrack] = useState(tracks[0])\n    const [users, setUsers] = useState([])\n\n    useEffect(() => {\n\n    })\n    \n    // useEffect(() => { // get this object from API call in object\n    //     console.log(key)\n\n    //     const getFriends = async () => {\n    //         try {\n    //             const res = await fetch('http://localhost:3001/friends/' , {\n    //                 method: 'POST',\n    //                 headers: {\n    //                     'Content-Type': 'application/json'\n    //                 },\n    //                 body: JSON.stringify({\n    //                     sessionKey: key\n    //                 })\n    //             })\n    \n    //             const users = await res.json()\n    //             setUsers(users)\n    //             console.log(users)\n    //         } catch (error) {\n    //             console.log(error)\n    //         }\n    //     }\n\n    //     getFriends()\n    // }, [key])\n\n    const generateSong = () => {\n        let randTrack = getRandomNumberInRange()\n        setTrack(tracks[randTrack])\n        // socket.emit('change_song', { song: tracks[randTrack] })\n        socket.emit('send_message', { message: \"Heyo\" })\n    }\n\n    const getRandomNumberInRange = () => {\n        return Math.floor(Math.random() * (tracks.length - 0 + 1)) + 0;\n    }\n    \n\n    return (\n        <div className=\"room\">\n            <RoomHeader name={name}/>\n            <Button className=\"random-btn\" onClick={generateSong}>Change song</Button>\n        \n            <Spotify link={track} />\n\n            {/* <Dropdown>\n                <Dropdown.Toggle variant=\"success\" id=\"dropdown-basic\">\n                friends\n                </Dropdown.Toggle>\n        \n                <Dropdown.Menu>\n                    {users.map((user, index) => {\n                        return <Dropdown.Item key={index}>{user}</Dropdown.Item>;\n                    })}\n                </Dropdown.Menu>\n            </Dropdown>  */}\n        </div>\n       \n    )\n}\n\nexport default Room"],"mappings":";;AAAA,OAAOA,UAAU,MAAM,cAAc;AACrC,OAAOC,QAAQ,MAAM,0BAA0B;AAC/C,OAAOC,MAAM,MAAM,wBAAwB;AAC3C,SAASC,OAAO,QAAQ,qBAAqB;AAC7C,SAASC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAC3C,OAAO,cAAc;AACrB,OAAOC,EAAE,MAAM,kBAAkB;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEjC,MAAMC,MAAM,GAAGH,EAAE,CAACI,OAAO,CAAC,uBAAuB,CAAC,EAAC;;AAEnD,MAAMC,IAAI,GAAGA,CAAC;EAAEC,GAAG;EAAEC;AAAK,CAAC,KAAK;EAAAC,EAAA;EAC5B,MAAMC,MAAM,GAAG,CACP,2EAA2E,EAC3E,iFAAiF,EACjF,2EAA2E,CAClF;EACD,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGZ,QAAQ,CAACU,MAAM,CAAC,CAAC,CAAC,CAAC;EAC7C,MAAM,CAACG,KAAK,EAAEC,QAAQ,CAAC,GAAGd,QAAQ,CAAC,EAAE,CAAC;EAEtCD,SAAS,CAAC,MAAM,CAEhB,CAAC,CAAC;;EAEF;EACA;;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA;EACA;;EAEA,MAAMgB,YAAY,GAAGA,CAAA,KAAM;IACvB,IAAIC,SAAS,GAAGC,sBAAsB,CAAC,CAAC;IACxCL,QAAQ,CAACF,MAAM,CAACM,SAAS,CAAC,CAAC;IAC3B;IACAZ,MAAM,CAACc,IAAI,CAAC,cAAc,EAAE;MAAEC,OAAO,EAAE;IAAO,CAAC,CAAC;EACpD,CAAC;EAED,MAAMF,sBAAsB,GAAGA,CAAA,KAAM;IACjC,OAAOG,IAAI,CAACC,KAAK,CAACD,IAAI,CAACE,MAAM,CAAC,CAAC,IAAIZ,MAAM,CAACa,MAAM,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC;EAClE,CAAC;EAGD,oBACIpB,OAAA;IAAKqB,SAAS,EAAC,MAAM;IAAAC,QAAA,gBACjBtB,OAAA,CAACR,UAAU;MAACa,IAAI,EAAEA;IAAK;MAAAkB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAC,CAAC,eACzB1B,OAAA,CAACN,MAAM;MAAC2B,SAAS,EAAC,YAAY;MAACM,OAAO,EAAEf,YAAa;MAAAU,QAAA,EAAC;IAAW;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,eAE1E1B,OAAA,CAACL,OAAO;MAACiC,IAAI,EAAEpB;IAAM;MAAAe,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAavB,CAAC;AAGd,CAAC;AAAApB,EAAA,CAxEKH,IAAI;AAAA0B,EAAA,GAAJ1B,IAAI;AA0EV,eAAeA,IAAI;AAAA,IAAA0B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}