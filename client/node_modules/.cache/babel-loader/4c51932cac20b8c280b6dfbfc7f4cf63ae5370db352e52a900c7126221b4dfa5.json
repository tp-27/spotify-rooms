{"ast":null,"code":"var _jsxFileName = \"/Users/thomasphan/Desktop/listen-with-me-app/client/src/components/Key.js\",\n  _s = $RefreshSig$();\nimport { useState, useRef } from 'react';\nimport Button from 'react-bootstrap/Button';\nimport Form from 'react-bootstrap/Form';\nimport '../index.css';\nimport CopyButton from './CopyButton';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Key = ({\n  newKey,\n  createRoom\n}) => {\n  _s();\n  // const [key, setKey] = useState('testkey')\n  const [copy, setCopy] = useState(false);\n  const keyRef = useRef();\n  const keyDivStyle = {\n    display: \"flex\",\n    justifyContent: \"space-between\",\n    width: \"100%\"\n  };\n  const copyToClipboard = () => {\n    const key = keyRef.current.innerText; // Get the text content of the paragraph\n    navigator.clipboard.writeText(key) // Use Clipboard API to copy text\n    .then(() => {\n      console.log('Text copied to clipboard');\n      console.log(key);\n    }).catch(err => {\n      console.error('Failed to copy text: ', err);\n    });\n  };\n  const makeRoom = e => {\n    e.preventDefault();\n    let roomName = e.target.value;\n    createRoom(roomName);\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Form, {\n      style: {\n        width: \"100%\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n        children: \"Name:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n        type: \"text\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"primary\",\n        type: \"submit\",\n        onClick: makeRoom,\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Key:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"new-key-container\",\n      style: keyDivStyle,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"key-container\",\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          ref: keyRef,\n          children: newKey\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(CopyButton, {\n        onClick: () => copyToClipboard(),\n        showCopied: copy\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n};\n_s(Key, \"BIwFhNq9dOieOQNn+sh2BlcssP0=\");\n_c = Key;\nexport default Key;\nvar _c;\n$RefreshReg$(_c, \"Key\");","map":{"version":3,"names":["useState","useRef","Button","Form","CopyButton","jsxDEV","_jsxDEV","Fragment","_Fragment","Key","newKey","createRoom","_s","copy","setCopy","keyRef","keyDivStyle","display","justifyContent","width","copyToClipboard","key","current","innerText","navigator","clipboard","writeText","then","console","log","catch","err","error","makeRoom","e","preventDefault","roomName","target","value","children","style","Label","fileName","_jsxFileName","lineNumber","columnNumber","Control","type","variant","onClick","className","ref","showCopied","_c","$RefreshReg$"],"sources":["/Users/thomasphan/Desktop/listen-with-me-app/client/src/components/Key.js"],"sourcesContent":["import { useState, useRef } from 'react'\nimport Button from 'react-bootstrap/Button'\nimport Form from 'react-bootstrap/Form'\nimport '../index.css';\nimport CopyButton from './CopyButton';\n\nconst Key = ({ newKey, createRoom }) => {\n    // const [key, setKey] = useState('testkey')\n    const [copy, setCopy] = useState(false)\n    const keyRef = useRef()\n\n    const keyDivStyle = {\n        display: \"flex\",\n        justifyContent: \"space-between\",\n        width: \"100%\",\n    };\n\n    const copyToClipboard = () => {\n        const key = keyRef.current.innerText // Get the text content of the paragraph\n        navigator.clipboard.writeText(key) // Use Clipboard API to copy text\n            .then(() => {\n                console.log('Text copied to clipboard')\n                console.log(key)\n            })\n            .catch(err => {\n                console.error('Failed to copy text: ', err)\n            })\n    }\n\n    const makeRoom = (e) => {\n        e.preventDefault()\n        let roomName = e.target.value\n        createRoom(roomName)\n    }\n\n    return (\n        <>\n            <Form style={{ width: \"100%\" }}>\n                <Form.Label>Name:</Form.Label>\n                <Form.Control type=\"text\" />\n                <Button variant=\"primary\" type=\"submit\" onClick={makeRoom}>\n                    Submit\n                </Button>\n            </Form>\n            <p>Key:</p>\n            <div className=\"new-key-container\" style={keyDivStyle}>\n                <div className=\"key-container\">\n                    <p ref={keyRef}>{newKey}</p>\n                </div>\n\n                <CopyButton onClick={() => copyToClipboard()} showCopied={copy} />\n            </div>\n            \n            \n        </>\n    )\n}\n\nexport default Key"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}